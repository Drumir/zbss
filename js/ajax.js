
function callbackAuthorization(data, textStatus){
  resetTimeout();      // Остановим отсчет
  if(data != null) {  // null ли?!
    var div1 = document.createElement('div');
    div1.hidden = true;
    div1.insertAdjacentHTML( 'beforeend', data );
    document.body.appendChild(div1);
    if(document.getElementById('divUserName') != undefined){  // Авторизация уже свершилась
      userName = document.getElementById('divUserName').innerText;
      document.getElementById('statusName').innerText = userName;
      loadEnvironment();
    }
    if(document.getElementById('divLoginVirgin') != undefined){  // Получили запрос авторизации
      loadPopupLogin();
      centerPopupLogin();
    }
    if(document.getElementById('divLogin') != undefined){  // Авторизация отклонена
      setStatus("Авторизация  отклонена");
    }
    document.body.removeChild(div1)
    div1.innerHTML = "";
  }
}

function loadEnvironment() {
  mySetTimeout(12, "Ошибка загрузки переменных окружения");
  $.post("https://oss.unitline.ru:995/adm/tt/trouble_ticket_list.asp", {type: "8", id: "1", tt_gate: "2", page: "1", rows: "10", hide: "0"}, callbackLoadEnvironment, "html");
  setStatus("Загрузка переменных окружения  <IMG SRC='/images/wait.gif' alignment='vertical' ALT='Renew' TITLE='Renew'>");
}

function callbackLoadEnvironment(data, textStatus) {
  resetTimeout();
  if(data != null) {  // null ли?!
    var div1 = document.createElement('div');
    div1.insertAdjacentHTML( 'beforeend', data );                 // Создадим из data DOM дерево
    div1.hidden = true;
    document.body.appendChild(div1);
                                      // Загрузим списки
    if(document.getElementById('resp_id') != undefined){
      resp_id = document.getElementById('resp_id').children;          // Ответственные лица
    }
    if(document.getElementById('organization_id')!= undefined){
      organization_id = document.getElementById('organization_id').children;  // клиенты
    }
    if(document.getElementById('tt_region')!= undefined){
      tt_region = document.getElementById('tt_region').children;        // Регион
    }
    if(document.getElementById('tt_status_id')!= undefined){
      tt_status_id = document.getElementById('tt_status_id').children;     // Статус тикета
    }

    $("#resp_id_s").empty();          // Заполним список отв. лиц в шапке таблицы и заодно определим свой ID
    for(var i = 0; i < resp_id.length; i ++) {
      $("#resp_id_s").append("<option value='" + resp_id[i].value + "'>" + resp_id[i].text + "</option>")
      if(resp_id[i].text === userName) {
        userId = resp_id[i].value;
      }
    }

    document.body.removeChild(div1)    // Очистим временный div
    div1.innerText = "";

    $("#resp_id_s").change(onRespIdChange);
    refreshTime = 1;            // Включим автообновление. Первое произойдет через 1 секунду
  }
}

function callbackLoadEnvironment2(data, textStatus) {    // Этот каллбэк используется для получения списка подразделений авторов. Вызывается при первой загрузуки попапа трансфер
  resetTimeout();
  if(data != null) {  // null ли?!
    var div1 = document.createElement('div');
    div1.insertAdjacentHTML( 'beforeend', data );                 // Создадим из data DOM дерево
    div1.hidden = true;
    document.body.appendChild(div1);
                                      // Загрузим списки
    if(document.getElementById('branchlist') != undefined){
      branch_id = document.getElementById('branchlist').children;          // Ответственные лица
//      document.getElementById('branchLiist').children = branch_id; // Загрузим список срузу в попап трансфер - список подразделений
      $("#branchLiist").empty();                             // Загрузим список срузу в попап трансфер - список подразделений
      for(var i = 0; i < branch_id.length; i ++) {
        if(branch_id[i].value === "100184")
          $("#branchLiist").append("<option value='" + branch_id[i].value + "' selected = 'true'>" + branch_id[i].text + "</option>");
        else
          $("#branchLiist").append("<option value='" + branch_id[i].value + "'>" + branch_id[i].text + "</option>");
      }
    }
    else {
      document.getElementById('buttonTransfer').hidden = true;
      document.getElementById('btTransfNote').text = "Невозможно получить список подразделений";
    }
    document.body.removeChild(div1)    // Очистим временный div
    div1.innerText = "";
    }
}

function loadTickets() {
  mySetTimeout(12, "Ошибка загрузки списка тикетов");
  $.post("https://oss.unitline.ru:995/inc/jquery.asp", {type: "8", id: "1", organization_id: "0", resp_id: "0", tt_is_group: "2", tt_priority_id: "0", tt_gate: "2"  , tt_region: "0", tt_closed_name: "128", tt_type_closed: "0", tt_subtype_closed: "0", tt_status_id: "1000", page: "1", rows: "500", hide: "0"}, callbackLoadTickets, "json");
                                                      //                     Организация        , Отв. Лицо   , Группов. авария ,  Приоритет         ,все кроме шлюза, Регион        , тип сети             , класс аварии       , подкласс аварии       , Все кроме закрытых  ,
  setStatus("Загрузка списка тикетов  <IMG SRC='/images/wait.gif' alignment='vertical' alt='Renew'>");
}

function callbackLoadTickets(data, textStatus) {
  resetTimeout();
  if(data != null) {
    renewTickets(data);
  }
  setStatus("Готово");
}

function callbackGetTicket(data, textStatus) {
  var tid, permissions, t, h, m, str;
  if(data != null) {  // null ли?!
    document.getElementById('tempDiv').insertAdjacentHTML( 'beforeend', data );
    var tb = document.getElementById('PrintArea').children[1].children[0];    // исходная таблица
    var ltb = document.getElementById('leftPTtBody');                         // Моя таблица
    var buttons = document.getElementsByClassName('inpButton');  // Получим список доступных кнопок
    permissions = "";
    for(var i = 0; i < buttons.length; i ++) {                          // Перепишем все их названия в permissions Через ***
      permissions += buttons[i].value + "***";
    }

    tid = tb.children[0].children[1].innerText;
    if(Tickets[tid] != undefined) Tickets[tid].permissions = permissions;                                 // Выставим permissions для текущего тикета
    document.getElementById('popupTicket').iidd = tid


    ltb.children[0].children[1].innerText = tid;
    ltb.children[1].children[1].innerText = tb.children[1].children[1].innerText;   // Создан
    ltb.children[2].children[1].innerText = tb.children[2].children[1].innerText;   // Заголовок
    ltb.children[3].children[1].innerText = tb.children[4].children[1].innerText;   // Автор
    ltb.children[4].children[1].innerText = tb.children[5].children[1].innerText;   // Отв. лицо
    ltb.children[5].children[1].innerText = tb.children[6].children[1].innerText;   // Приоритет
    ltb.children[6].children[1].innerText = tb.children[7].children[1].innerText;   // Статус
    ltb.children[7].children[1].innerText = tb.children[8].children[1].innerText;   // Регион
    ltb.children[8].children[1].innerHTML = tb.children[9].children[1].innerHTML;   // Клиент
    ltb.children[9].children[1].children[0].innerHTML = tb.children[10].children[1].innerHTML;   // Текст. Замени на innerText и появится перенос строк!

    document.getElementById('toTabs').innerText = "В закладки"; if(Tabs[tid] != undefined) document.getElementById('toTabs').innerText = "Из закладок";

    if(permissions.indexOf("Подтвердить") != -1){ // Если принятие заявки не подтверждено - выделим цветом
      ltb.children[4].children[1].style.backgroundColor = "#FFA500";
    }
    document.getElementById('hTable').innerHTML = "";
    delete tb;
    document.getElementById('tempDiv').innerHTML = "";

    document.getElementById('timeLeft').innerText = " через  0ч  0м";
    var now = new Date();
    now = now.getTime();
    if(Tickets[tid].timer > now){
      t = Math.floor((Tickets[tid].timer - now) / 60000);
      h = Math.floor(t/60);
      m = t - h*60;
      str = "&nbsp;через&nbsp;";
      if(h < 10) str += "&nbsp";
      str += h + "ч&nbsp;";
      if(m < 10) str += "&nbsp";
      str += m + "м";
      document.getElementById('timeLeft').innerHTML = str;
    }

    loadPopupTicket();
    centerPopupTicket();
    $.post("https://oss.unitline.ru:995/inc/jquery.asp", {type: "10", id: "1", tt_id: tid, page: "1", rows: "200", hide: "0"}, callbackGetHistory, "json");
  }
}

function callbackGetHistory(data, textStatus) {
  if(data != null) {  // null ли?!
    var innerHTML = "";
    document.getElementById('comment').value = "";
    if(Tabs[document.getElementById('popupTicket').iidd] != undefined) {  // Если этот тикет ест во вкладках, восстановим набранный в comment текст
      document.getElementById('comment').value = Tabs[document.getElementById('popupTicket').iidd].text;
    }
    for(var i = 0; i < data.rows.length;  i ++) {
      arrFio = data.rows[i].fio.split(" ", 3);
      fio = arrFio[0] + " " + arrFio[1].substring(0,1) + ". " + arrFio[2].substring(0,1) + ".";
      innerHTML += '<tr align="left" style="color:#1111bb"><td><b>' + ' ' + fio + '('+ data.rows[i].date +') ';
      if(data.rows[i].action.indexOf("Назначено ответственное лицо") != -1){
        innerHTML += "<IMG SRC='/images/arrow.png'> " + fullName2FIO(data.rows[i].action.substring(29));
      }
      else if(data.rows[i].action.indexOf("Оставлен комментарий") != -1){
        innerHTML += ':';
      }
      else if(data.rows[i].action.indexOf("Переведено в статус") != -1){
        innerHTML += '<span style="color:#118888">' + data.rows[i].action.substring(19) + '</span>';
      }
      else {
        innerHTML += data.rows[i].action;
      }
      innerHTML += '<b></td></tr>';
      if(data.rows[i].comment.length > 1){
        innerHTML += '<tr style="color:#330000"><td>&nbsp;' + data.rows[i].comment + '</td></tr>';
      }
    }
    document.getElementById('hTable').innerHTML = innerHTML;
  }

}

function cbWiki(data, textStatus) {
  document.getElementById('ppRegion')[0].text = "- Все регионы -";
  document.getElementById('ppRegion').disabled = false;
  document.getElementById('ppRegion').selectedIndex = 0;
//  document.getElementById('wikiLink').text += " - Искать в Wiki";
  var start = data.indexOf("Субъект федерации");
  if(start === -1){return;}
  data = data.substring(start, start + 1000);
  start = data.indexOf('title="');
  if(start === -1){return;}
  data = data.substring(start);
  start = data.indexOf('">');
  if(start === -1 || start > 100){return;}
  var region = data.substring(7, start);
  for(var i = 1; i < tt_region.length; i ++){
    if(tt_region[i].text == region || ((tt_region[i].text.indexOf(region) != -1) && (tt_region[i].text.indexOf("Республика") != -1))){
      document.getElementById('ppRegion').selectedIndex = i;
      break;
    }
  }
}